### Registro de usuario y obtener token
POST http://localhost:3000/api/auth/register
Content-Type: application/json

{
  "email": "PONER_AQUÍ_EL_EMAIL",
  "password": "PONER_AQUÍ_LA_CONTRASEÑA"
}

### Validar email con token JWT
PUT http://localhost:3000/api/auth/validate
Content-Type: application/json
Authorization: Bearer PONER_AQUÍ_EL_TOKEN_JWT

{
  "code": "AQUÍ_EL_CODIGO_QUE_VES_EN_LA_TERMINAL"
}

### Login de usuario
POST http://localhost:3000/api/auth/login
Content-Type: application/json

{
  "email": "PONER_AQUÍ_EL_EMAIL",
  "password": "PONER_AQUÍ_LA_CONTRASEÑA"
}

### Onboarding: Datos personales
PUT http://localhost:3000/api/auth/personal
Content-Type: application/json
Authorization: Bearer PONER_AQUÍ_EL_TOKEN_JWT

{
  "nombre": "PONER_AQUÍ_EL_NOMBRE",
  "apellidos": "PONER_AQUÍ_LOS_APELLIDOS",
  "nif": "PONER_AQUÍ_EL_NIF",
}

### Onboarding: Datos compañía
PATCH http://localhost:3000/api/auth/company
Content-Type: application/json
Authorization: Bearer PONER_AQUÍ_EL_TOKEN_JWT

{
  "nombre": "PONER_AQUÍ_EL_NOMBRE_DE_LA_EMPRESA",
  "cif": "PONER_AQUÍ_EL_CIF",
  "direccion": "PONER_AQUÍ_LA_DIRECCIÓN",
  "esAutonomo": false
}

### Subida de logo (imagen)
PATCH http://localhost:3000/api/auth/logo
Authorization: Bearer PONER_AQUÍ_EL_TOKEN
Content-Type: multipart/form-data; boundary=BOUNDARY

--BOUNDARY
Content-Disposition: form-data; name="logo"; filename="NOMBRE_IMAGEN"
Content-Type: image/jpeg

< ./test_assets/Logo1.jpg
--BOUNDARY--

### Obtener mis datos
GET http://localhost:3000/api/auth/me
Authorization: Bearer PONER_AQUÍ_EL_TOKEN

### Desactivar cuenta (soft delete)
DELETE http://localhost:3000/api/auth/delete
Authorization: Bearer PONER_AQUÍ_EL_TOKEN

### Eliminar cuenta (hard delete)
DELETE http://localhost:3000/api/auth/delete?soft=false
Authorization: Bearer PONER_AQUÍ_EL_TOKEN